// Generated by CoffeeScript 1.10.0
(function() {
  var $, FIELDS, db, genResult, remotedb, resultsEl;

  remotedb = new PouchDB('http://couch.samgentle.com/docs-nodejs-5-4-0');

  db = new PouchDB('local');

  $ = document.querySelector.bind(document);

  FIELDS = ['module', 'name', 'content'];

  window.db = db;

  $('#results').innerHTML = 'Loading...';

  remotedb.replicate.to(db).then(function() {
    $('#results').innerHTML = 'Building indexes...';
    return db.search({
      fields: FIELDS,
      build: true
    });
  }).then(function() {
    return db.put({
      _id: '_design/search_index',
      views: {
        search_index: {
          map: (function(doc) {
            emit(doc.name.toLowerCase());
            return emit(doc._id.toLowerCase());
          }).toString()
        }
      }
    });
  })["catch"](function(e) {
    if (e.status !== 409) {
      throw e;
    }
  }).then(function() {
    return db.query('search_index');
  }).then(function() {
    $('#results').innerHTML = 'Ready.';
    return console.log("READY!");
  });

  resultsEl = $('#results');

  genResult = function(doc) {
    return "<h2>" + doc.title + "</h2>\n<div>" + doc.content + "</div>";
  };

  $('#search').addEventListener('input', function() {
    var key, query;
    query = $('#search').value;
    key = query.toLowerCase().replace(/\W/, '/');
    key || (key = '\uFFFF');
    return Promise.all([
      db.query('search_index', {
        startkey: key,
        endkey: key + '\uFFFF',
        include_docs: true,
        limit: 5
      }), db.search({
        fields: FIELDS,
        query: query,
        include_docs: true,
        limit: 5
      })
    ]).then(function(arg) {
      var direct_results, div, fulltext_results, i, j, len, len1, ref, result, results, results1, resultsmap;
      direct_results = arg[0], fulltext_results = arg[1];
      results = [];
      resultsmap = {};
      ref = direct_results.rows.concat(fulltext_results.rows);
      for (i = 0, len = ref.length; i < len; i++) {
        result = ref[i];
        if (!(!resultsmap[result.id])) {
          continue;
        }
        results.push(result);
        resultsmap[result.id] = true;
      }
      console.log("results", results);
      resultsEl.innerHTML = "";
      results1 = [];
      for (j = 0, len1 = results.length; j < len1; j++) {
        result = results[j];
        div = document.createElement('div');
        div.innerHTML = genResult(result.doc);
        console.log("div", div);
        results1.push(resultsEl.appendChild(div));
      }
      return results1;
    })["catch"](function(e) {
      return console.error("Query failed", e);
    });
  });

}).call(this);
